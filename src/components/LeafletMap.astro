---
import "leaflet/dist/leaflet.css"

export interface Props {
  latitude: number
  longitude: number
  zoom: number
  /** URL del tileLayer, ver: https://leafletjs.com/reference.html#tilelayer */
  tileLayer: string
  /** Atribución requerida por la mayoría de tile servers */
  attribution: string
  color: string
}

const { latitude, longitude, zoom, container, tileLayer, attribution, color } = Astro.props
---

<leaflet-map
  class="block h-full"
  data-latitude={latitude}
  data-longitude={longitude}
  data-zoom={zoom}
  data-container={container}
  data-tiles={tileLayer}
  data-attribution={attribution}
  data-color={color}
>
</leaflet-map>

<script>
  import L from "leaflet"

  class LeafletMap extends HTMLElement {
    connectedCallback() {
      const { latitude, longitude, zoom, tiles, attribution, color } = this.dataset
      const latlng = [Number(latitude), Number(longitude)]

      const map = L.map(this, {
        scrollWheelZoom: false,
        dragging: false,
      }).setView(latlng, Number(zoom))

      // Habilitar interactividad al hacer clic
      map.once("click", () => {
        map.scrollWheelZoom.enable()
        map.dragging.enable()
      })

      L.tileLayer(tiles, { attribution }).addTo(map)

      // Definir icono personalizado
      const myIcon = L.icon({
        iconUrl: "images/icons/marker.png",
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41],
      })

      L.marker(latlng, { icon: myIcon }).addTo(map).bindPopup("Aquopolis Villanueva de la Cañada")

      const lolalolitalandGeoJSON = {
        type: "LolalolitalandCollection",
        features: [
          {
            type: "Feature",
            properties: {
              name: "Aquopolis Villanueva de la Cañada",
              amenity: "Parque Acuático",
              popupContent: "Lolalolitaland",
            },
            geometry: {
              coordinates: [
                [
                  [-3.99076369718523, 40.45536289516917],
                  [-3.9903189790816214, 40.45554486964127],
                  [-3.990155158873449, 40.455574594431596],
                  [-3.9900581269040174, 40.4555765121593],
                  [-3.989746213601734, 40.45562017324792],
                  [-3.9891993962796732, 40.45577514093404],
                  [-3.9877151778341897, 40.4565245001821],
                  [-3.986617827976488, 40.45688371127795],
                  [-3.986762901959281, 40.45739742873948],
                  [-3.986874497331769, 40.458015158171435],
                  [-3.9871395363399245, 40.45832295937666],
                  [-3.9872399721744216, 40.45822531225053],
                  [-3.98763892562863, 40.458221066720256],
                  [-3.987895594983911, 40.458333573185996],
                  [-3.9883615793518743, 40.458009647005866],
                  [-3.9889269617388265, 40.458145917956614],
                  [-3.9890551384914943, 40.4581485899335],
                  [-3.989316473572501, 40.4581222396026],
                  [-3.9896014481069244, 40.458347573973214],
                  [-3.989959063207891, 40.458262542223935],
                  [-3.9901490462303855, 40.45801169793688],
                  [-3.9904675471792928, 40.45781187215661],
                  [-3.9911771896460095, 40.457905407701986],
                  [-3.9914006990829876, 40.45762054904381],
                  [-3.991830954751606, 40.45762054904381],
                  [-3.9919594726791843, 40.45739946387951],
                  [-3.9912386547409824, 40.45630253057408],
                  [-3.9908475132244234, 40.4562089927972],
                  [-3.990981618887105, 40.4558518473593],
                  [-3.990875451903719, 40.455826336897786],
                  [-3.990836337751716, 40.45589861651237],
                  [-3.9906072405783277, 40.45586460258619],
                  [-3.990646354730387, 40.45577531594671],
                  [-3.9908810396400725, 40.45557123175476],
                  [-3.99076369718523, 40.45536289516917],
                ],
              ],
              type: "Polygon",
            },
          },
        ],
      }

      const lolalolitalandGeoGsonStyle = {
        color: color,
        weight: 5,
        opacity: 0.65,
      }

      L.geoJSON(lolalolitalandGeoJSON, {
        style: lolalolitalandGeoGsonStyle,
      }).addTo(map)
    }
  }

  window.customElements.define("leaflet-map", LeafletMap)
</script>
